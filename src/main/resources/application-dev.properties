# dev profile configuration,this is profile-specific properties files,these have to be
# named in the format application-{profiles}.properties

mybatis.config-location=classpath:mybatis_config.xml

# classpath*:conf/appContext.xml,all classpath resources that match the given name must be obtained
mybatis.mapper-locations=classpath:**/*Mapper.xml

# you can bind these property values into bean properties using @Value:
# @Value("${spring.datasource.druid.url}")
# private String url


# Druid Datasource specific settings
# Spring Boot will automatically generate and configure the dataSource bean based on properties set int the
# application.properties file,So we can directly use:
#       @Autowired
#       private DataSource dataSource;


# spring.datasource.url=jdbc:h2:~/jooq-spring-boot-example
spring.datasource.druid.url=jdbc:mysql://localhost:3306/will?useSSL=false&useUnicode=yes
spring.datasource.druid.username=root
spring.datasource.druid.password=2b172b
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
# List properties
spring.datasource.druid.list-values[0]=foo
spring.datasource.druid.list-values[1]=bar
spring.datasource.druid.list-values[2]=baz

# Map properties
spring.datasource.druid.mapHeaders.movieTitle=Titanic
spring.datasource.druid.mapHeaders.movieDirector=James Cameron

# place the logback.xml file in the root classpath,Spring boot will automatically use it the configure the logging system.
logging.level.com.google = DEBUG
logging.level.org.springframework.web = DEBUG
logging.level.org.springframework.data =DEBUG
logging.file = /home/will/springboot_project/logging/log

app.dbType=MONGO
dbType=MONGO

spring.devtools.restart.trigger-file=classpath:**/AppConfig.java

# true by default,if true,Spring Boot will use the Schema.sql and data.sql files in the root classpath to initialize the database
# In addition to schema.sql,data.sql,Spring Boot will load the schema-${platform}.sql and data-${platform}.sql files if they are
# available in the root classpath to initialize the database.here the platform value is the value of the spring.datasource.platform property,
# which can be hsqldb,h2,oracle,mysql,postgresql,etc
spring.datasource.initialize=true



# mongo database
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=will


# ehcache
spring.cache.ehcache.config=classpath:ehcache.xml